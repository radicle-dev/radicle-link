name: fast
on: [pull_request]
jobs:
  fmt:
    if: ${{ github.event.pull_request.head.repo.fork }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/cache@v2
        env:
          cache-name: target-cache
        with:
          path: target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.toml', '**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Rust
        run: rustup update nightly-2021-03-25 --no-self-update && rustup default nightly-2021-03-25 && rustup component add clippy rustfmt
        shell: bash
      - run: ./ci/clippy
        shell: bash

  test-linux:
    if: ${{ github.event.pull_request.head.repo.fork }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/cache@v2
        env:
          cache-name: target-cache
        with:
          path: target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.toml', '**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Rust
        run: rustup update nightly-2021-03-25 --no-self-update && rustup default nightly-2021-03-25
        shell: bash
      - run: ./ci/test-fast
        shell: bash

  test-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/cache@v2
        env:
          cache-name: target-cache
        with:
          path: target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.toml', '**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Rust
        run: rustup update nightly-2021-03-25 --no-self-update && rustup default nightly-2021-03-25
        shell: bash
      # NB: We install gnu-tar because BSD tar is buggy on Github's macos machines. https://github.com/actions/cache/issues/403
      - name: Install GNU tar
        run: |
          ./ci/macos-gnu
          echo "/usr/local/opt/gnu-tar/libexec/gnubin" >> $GITHUB_PATH
      - run: ./ci/test-fast
        timeout-minutes: 20
        shell: bash

  test-win:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/cache@v2
        env:
          cache-name: target-cache
        with:
          path: target
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('Cargo.toml', '**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Rust
        run: rustup update nightly-2021-03-25 --no-self-update && rustup default nightly-2021-03-25
        shell: bash
      - run: ./ci/test-fast
        timeout-minutes: 20
        shell: bash
